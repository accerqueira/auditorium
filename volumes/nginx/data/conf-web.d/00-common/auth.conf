# # Usage
# Add the following lines to nginx server configuration:
# ```
# set $auth_oidc_client_id      "{{oidc_client_id}}";
# set $auth_oidc_client_secret  "{{oidc_client_secret}}";
# include conf-web.d/00-common/auth.conf;
# ```


# TODO: evaluate njs oidc client

auth_request      /auth;
auth_request_set  $auth_redirect                   $upstream_http_location;
auth_request_set  $auth_cookie                     $upstream_http_set_cookie;
auth_request_set  $auth_oidc_sub                   $upstream_http_x_oidc_sub;
auth_request_set  $auth_oidc_name                  $upstream_http_x_oidc_name;
auth_request_set  $auth_oidc_email                 $upstream_http_x_oidc_email;
auth_request_set  $auth_oidc_preferred_username    $upstream_http_x_oidc_preferred_username;

#set $remote_user $auth_oidc_sub; # doesn't work :(

error_page 401 = @auth_redirect;
location @auth_redirect {
    default_type text/html;
    return 401 '<html><head><meta http-equiv="refresh" content="0; URL=${auth_redirect}" /></head></html>';
}

location = /auth {
    internal;
    proxy_pass              https://auth.grana.guru/ngx/;
    proxy_redirect          off;
    proxy_pass_request_body off;

    proxy_http_version      1.1;
    proxy_set_header        Content-Length           "";
    proxy_set_header        X-Original-URI           $request_uri;
    proxy_set_header        X-Oidc-Redirect-URI      $scheme://$host/auth/callback?redirect_uri=$request_uri;
    proxy_set_header        X-Oidc-Client-ID         $auth_oidc_client_id;
    proxy_set_header        X-Oidc-Client-Secret     $auth_oidc_client_secret;

    include conf-web.d/00-common/request_id_headers.conf;
    include conf-web.d/00-common/real_ip_params.conf;
    include conf-web.d/00-common/request_id_headers.conf;
    include conf-web.d/00-common/forwarded_headers.conf;
    include conf-web.d/00-common/ws_headers.conf;

    proxy_intercept_errors on;
}

location = /auth/callback {
    add_header  Set-Cookie    "ngx-sso=$arg_code; path=/; httponly"        always;

    return 302  /; 

    # return 302  $arg_redirect_uri; # doesn't work :(

    # default_type text/html;
    # return 200 '<html><head><meta http-equiv="refresh" content="0; URL=${arg_redirect_uri}" /></head></html>'; # doesn't work :(
}

location = /auth/off {
    default_type text/html;
    return 200 "ok";
}

add_header  X-Oidc-Sub                 $auth_oidc_sub                   always;
add_header  X-Oidc-Name                $auth_oidc_name                  always;
add_header  X-Oidc-Email               $auth_oidc_email                 always;
add_header  X-Oidc-Preferred-Username  $auth_oidc_preferred_username    always;
